package com.hoau.how.module.itf.server.ws.claim;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-06-14T11:28:19.857+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "ClaimsWBServiceImplService", 
                  wsdlLocation = "http://10.39.251.109/TDHY_CLAIMS/ws-services/claimsWBService?wsdl",
                  targetNamespace = "http://hoauweb.ws.erry.com/") 
public class ClaimsWBServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://hoauweb.ws.erry.com/", "ClaimsWBServiceImplService");
    public final static QName ClaimsWBServiceImplPort = new QName("http://hoauweb.ws.erry.com/", "ClaimsWBServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://10.39.251.109/TDHY_CLAIMS/ws-services/claimsWBService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ClaimsWBServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://10.39.251.109/TDHY_CLAIMS/ws-services/claimsWBService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ClaimsWBServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ClaimsWBServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ClaimsWBServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ClaimsWBServiceImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE);
    }

    public ClaimsWBServiceImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE);
    }

    public ClaimsWBServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName);
    }    




    /**
     *
     * @return
     *     returns ClaimsWBService
     */
    @WebEndpoint(name = "ClaimsWBServiceImplPort")
    public ClaimsWBService getClaimsWBServiceImplPort() {
        return super.getPort(ClaimsWBServiceImplPort, ClaimsWBService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClaimsWBService
     */
    @WebEndpoint(name = "ClaimsWBServiceImplPort")
    public ClaimsWBService getClaimsWBServiceImplPort(WebServiceFeature... features) {
        return super.getPort(ClaimsWBServiceImplPort, ClaimsWBService.class, features);
    }

}
